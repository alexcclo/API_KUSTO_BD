{"version":3,"file":"messageHeader.js","sourceRoot":"","sources":["../../src/messageHeader.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAGlC,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AA+B/B;;;GAGG;AACH,MAAM,KAAW,aAAa,CAoD7B;AApDD,WAAiB,aAAa;IAC5B;;;;;OAKG;IACH,SAAgB,mBAAmB,CAAC,KAAoB;QACtD,MAAM,UAAU,GAAsB,EAAE,CAAC;QACzC,IAAI,KAAK,CAAC,aAAa,IAAI,SAAS,EAAE;YACpC,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;SACjD;QACD,IAAI,KAAK,CAAC,OAAO,IAAI,SAAS;YAAE,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QACnE,IAAI,KAAK,CAAC,aAAa,IAAI,SAAS,EAAE;YACpC,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;SACjD;QACD,IAAI,KAAK,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC/B,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;SACtC;QACD,IAAI,KAAK,CAAC,GAAG,IAAI,SAAS,EAAE;YAC1B,UAAU,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;SAC5B;QACD,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,UAAU,CAAC,CAAC;QACvD,OAAO,UAAU,CAAC;IACpB,CAAC;IAjBe,iCAAmB,sBAiBlC,CAAA;IAED;;;;;OAKG;IACH,SAAgB,qBAAqB,CAAC,KAAwB;QAC5D,MAAM,SAAS,GAAkB,EAAE,CAAC;QACpC,IAAI,KAAK,CAAC,cAAc,IAAI,SAAS,EAAE;YACrC,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC;SAChD;QACD,IAAI,KAAK,CAAC,OAAO,IAAI,SAAS,EAAE;YAC9B,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;SACnC;QACD,IAAI,KAAK,CAAC,cAAc,IAAI,SAAS,EAAE;YACrC,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC;SAChD;QACD,IAAI,KAAK,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC/B,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;SACrC;QACD,IAAI,KAAK,CAAC,GAAG,IAAI,SAAS,EAAE;YAC1B,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;SAC3B;QACD,MAAM,CAAC,OAAO,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAC;QACxD,OAAO,SAAS,CAAC;IACnB,CAAC;IAnBe,mCAAqB,wBAmBpC,CAAA;AACH,CAAC,EApDgB,aAAa,KAAb,aAAa,QAoD7B","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { MessageHeader as AmqpMessageHeader } from \"rhea-promise\";\nimport { logger } from \"./log\";\n\n/**\n * Describes the defined set of standard header properties of the message.\n */\nexport interface MessageHeader {\n  /**\n   * @property {boolean} [firstAcquirer] If this value is true, then this message has not been\n   * acquired by any other link. Ifthis value is false, then this message MAY have previously\n   * been acquired by another link or links.\n   */\n  firstAcquirer?: boolean;\n  /**\n   * @property {number} [deliveryCount] The number of prior unsuccessful delivery attempts.\n   */\n  deliveryCount?: number;\n  /**\n   * @property {number} [ttl] time to live in ms.\n   */\n  ttl?: number;\n  /**\n   * @property {boolean} [durable] Specifies durability requirements.\n   */\n  durable?: boolean;\n  /**\n   * @property {number} [priority] The relative message priority. Higher numbers indicate higher\n   * priority messages.\n   */\n  priority?: number;\n}\n\n/**\n * Describes the operations that can be performed on the message header.\n * @module MessageHeader\n */\nexport namespace MessageHeader {\n  /**\n   * Converts MessageHeader to AmqpMessageHeader.\n   *\n   * @param {MessageHeader} props Message header.\n   * @returns {AmqpMessageHeader} AmqpMessageHeader\n   */\n  export function toAmqpMessageHeader(props: MessageHeader): AmqpMessageHeader {\n    const amqpHeader: AmqpMessageHeader = {};\n    if (props.deliveryCount != undefined) {\n      amqpHeader.delivery_count = props.deliveryCount;\n    }\n    if (props.durable != undefined) amqpHeader.durable = props.durable;\n    if (props.firstAcquirer != undefined) {\n      amqpHeader.first_acquirer = props.firstAcquirer;\n    }\n    if (props.priority != undefined) {\n      amqpHeader.priority = props.priority;\n    }\n    if (props.ttl != undefined) {\n      amqpHeader.ttl = props.ttl;\n    }\n    logger.verbose(\"To AmqpMessageHeader: %O\", amqpHeader);\n    return amqpHeader;\n  }\n\n  /**\n   * Converts AmqpMessageHeader to MessageHeader.\n   *\n   * @param {AmqpMessageHeader} props Amqp Message Header\n   * @returns {MessageHeader} MessageHeader.\n   */\n  export function fromAmqpMessageHeader(props: AmqpMessageHeader): MessageHeader {\n    const msgHeader: MessageHeader = {};\n    if (props.delivery_count != undefined) {\n      msgHeader.deliveryCount = props.delivery_count;\n    }\n    if (props.durable != undefined) {\n      msgHeader.durable = props.durable;\n    }\n    if (props.first_acquirer != undefined) {\n      msgHeader.firstAcquirer = props.first_acquirer;\n    }\n    if (props.priority != undefined) {\n      msgHeader.priority = props.priority;\n    }\n    if (props.ttl != undefined) {\n      msgHeader.ttl = props.ttl;\n    }\n    logger.verbose(\"From AmqpMessageHeader: %O\", msgHeader);\n    return msgHeader;\n  }\n}\n"]}