{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/util/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport AsyncLock from \"async-lock\";\nimport { AbortSignalLike, AbortError } from \"@azure/abort-controller\";\nimport { WebSocketImpl } from \"rhea-promise\";\n\nexport { AsyncLock };\n/**\n * Describes the options that can be provided to create an async lock.\n */\nexport interface AsyncLockOptions {\n  /**\n   * @property {number} [timeout] The max timeout. Default is: 0 (never timeout).\n   */\n  timeout?: number;\n  /**\n   * @property {number} [maxPending] Maximum pending tasks. Default is: 1000.\n   */\n  maxPending?: number;\n  /**\n   * @property {boolean} [domainReentrant] Whether lock can reenter in the same domain.\n   * Default is: false.\n   */\n  domainReentrant?: boolean;\n  /**\n   * @property {any} [Promise] Your implementation of the promise. Default is: global promise.\n   */\n  Promise?: any;\n}\n\n/**\n * Options to configure the channelling of the AMQP connection over Web Sockets.\n */\nexport interface WebSocketOptions {\n  /**\n   * @property\n   * The WebSocket constructor used to create an AMQP connection over a WebSocket.\n   * This option should be provided in the below scenarios:\n   * - The TCP port 5671 which is that is used by the AMQP connection to Event Hubs is blocked in your environment.\n   * - Your application needs to be run behind a proxy server.\n   * - Your application needs to run in the browser and you want to provide your own choice of Websocket implementation\n   *   instead of the built-in WebSocket in the browser.\n   */\n  webSocket?: WebSocketImpl;\n  /**\n   * @property\n   * Options to be passed to the WebSocket constructor when the underlying `rhea` library instantiates\n   * the WebSocket.\n   */\n  webSocketConstructorOptions?: any;\n}\n\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode =\n  !!process && !!process.version && !!process.versions && !!process.versions.node;\n\n/**\n * Describes the servicebus connection string model.\n */\nexport interface ServiceBusConnectionStringModel {\n  Endpoint: string;\n  SharedAccessKeyName: string;\n  SharedAccessKey: string;\n  EntityPath?: string;\n  [x: string]: any;\n}\n\n/**\n * Describes the eventhub connection string model.\n */\nexport interface EventHubConnectionStringModel {\n  Endpoint: string;\n  SharedAccessKeyName: string;\n  SharedAccessKey: string;\n  EntityPath?: string;\n  [x: string]: any;\n}\n\n/**\n * Describes the stroage connection string model.\n */\nexport interface StorageConnectionStringModel {\n  DefaultEndpointsProtocol: string;\n  AccountName: string;\n  AccountKey: string;\n  EndpointSuffix: string;\n  [x: string]: any;\n}\n\n/**\n * Describes the iothub connection string model.\n */\nexport interface IotHubConnectionStringModel {\n  HostName: string;\n  SharedAccessKeyName: string;\n  SharedAccessKey: string;\n  DeviceId?: string;\n}\n\n/**\n * Defines an object with possible properties defined in T.\n * @type ParsedOutput<T>\n */\nexport type ParsedOutput<T> = { [P in keyof T]: T[P] };\n\n/**\n * Parses the connection string and returns an object of type T.\n *\n * Connection strings have the following syntax:\n *\n * ConnectionString ::= Part { \";\" Part } [ \";\" ] [ WhiteSpace ]\n * Part             ::= [ PartLiteral [ \"=\" PartLiteral ] ]\n * PartLiteral      ::= [ WhiteSpace ] Literal [ WhiteSpace ]\n * Literal          ::= ? any sequence of characters except ; or = or WhiteSpace ?\n * WhiteSpace       ::= ? all whitespace characters including \\r and \\n ?\n *\n * @param {string} connectionString The connection string to be parsed.\n * @returns {ParsedOutput<T>} ParsedOutput<T>.\n */\nexport function parseConnectionString<T>(connectionString: string): ParsedOutput<T> {\n  const output: { [k: string]: string } = {};\n  const parts = connectionString.trim().split(\";\");\n\n  for (let part of parts) {\n    part = part.trim();\n\n    if (part === \"\") {\n      // parts can be empty\n      continue;\n    }\n\n    const splitIndex = part.indexOf(\"=\");\n    if (splitIndex === -1) {\n      throw new Error(\n        \"Connection string malformed: each part of the connection string must have an `=` assignment.\"\n      );\n    }\n\n    const key = part.substring(0, splitIndex).trim();\n    if (key === \"\") {\n      throw new Error(\"Connection string malformed: missing key for assignment\");\n    }\n\n    const value = part.substring(splitIndex + 1).trim();\n\n    output[key] = value;\n  }\n\n  return output as any;\n}\n\n/**\n * Gets a new instance of the async lock with desired settings.\n * @param {AsyncLockOptions} [options] The async lock options.\n * @returns {AsyncLock} AsyncLock\n */\nexport function getNewAsyncLock(options?: AsyncLockOptions): AsyncLock {\n  return new AsyncLock(options);\n}\n\n/**\n * @constant {AsyncLock} defaultLock The async lock instance with default settings.\n */\nexport const defaultLock: AsyncLock = new AsyncLock({ maxPending: 10000 });\n\n/**\n * Describes a Timeout class that can wait for the specified amount of time and then resolve/reject\n * the promise with the given value.\n * @class Timout\n */\nexport class Timeout {\n  // Node and browsers return different types from setTimeout\n  // Any is the easiest way to avoid type errors in either platform\n  private _timer?: any;\n\n  set<T>(t: number, value?: T): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.clear();\n      const callback = value ? () => reject(new Error(`${value}`)) : resolve;\n      this._timer = setTimeout(callback, t);\n    });\n  }\n\n  clear(): void {\n    if (this._timer) {\n      clearTimeout(this._timer);\n    }\n  }\n\n  wrap<T>(promise: Promise<T>, t: number, value?: T): Promise<T> {\n    const wrappedPromise = this._promiseFinally(promise, () => this.clear());\n    const timer = this.set(t, value);\n    return Promise.race([wrappedPromise, timer]);\n  }\n\n  private _promiseFinally<T>(promise: Promise<T>, fn: Function): Promise<T> {\n    const success = (result: T) => {\n      fn();\n      return result;\n    };\n    const error = (e: Error) => {\n      fn();\n      return Promise.reject(e);\n    };\n    return Promise.resolve(promise).then(success, error);\n  }\n\n  static set<T>(t: number, value?: T): Promise<T> {\n    return new Timeout().set(t, value);\n  }\n\n  static wrap<T>(promise: Promise<T>, t: number, value?: T): Promise<T> {\n    return new Timeout().wrap(promise, t, value);\n  }\n}\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} delayInMs - The number of milliseconds to be delayed.\n * @param {AbortSignalLike} abortSignal - The abortSignal associated with containing operation.\n * @param {string} abortErrorMsg - The abort error message associated with containing operation.\n * @param {T} value - The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} - Resolved promise\n */\nexport function delay<T>(\n  delayInMs: number,\n  abortSignal?: AbortSignalLike,\n  abortErrorMsg?: string,\n  value?: T\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const rejectOnAbort = () => {\n      return reject(\n        new AbortError(abortErrorMsg ? abortErrorMsg : `The delay was cancelled by the user.`)\n      );\n    };\n\n    const removeListeners = () => {\n      if (abortSignal) {\n        abortSignal.removeEventListener(\"abort\", onAborted);\n      }\n    };\n\n    const onAborted = () => {\n      clearTimeout(timer);\n      removeListeners();\n      return rejectOnAbort();\n    };\n\n    if (abortSignal && abortSignal.aborted) {\n      return rejectOnAbort();\n    }\n\n    const timer = setTimeout(() => {\n      removeListeners();\n      resolve(value);\n    }, delayInMs);\n\n    if (abortSignal) {\n      abortSignal.addEventListener(\"abort\", onAborted);\n    }\n  });\n}\n\n/**\n * Generates a random number between the given interval\n * @param {number} min Min number of the range (inclusive).\n * @param {number} max Max number of the range (inclusive).\n */\nexport function randomNumberFromInterval(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * Type declaration for a Function type where T is the input to the function and V is the output\n * of the function.\n */\nexport type Func<T, V> = (a: T) => V;\n\n/*\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param {Array} promiseFactories An array of promise factories(A function that return a promise)\n *\n * @param {any} [kickstart] Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @return A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(\n  promiseFactories: Array<any>,\n  kickstart?: any\n): Promise<any> {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach((promiseFactory) => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * Determines whether the given connection string is an iothub connection string.\n * @param {string} connectionString The connection string.\n * @return {boolean} boolean.\n */\nexport function isIotHubConnectionString(connectionString: string): boolean {\n  connectionString = String(connectionString);\n\n  let result: boolean = false;\n  const model: any = parseConnectionString<any>(connectionString);\n  if (model && model.HostName && model.SharedAccessKey && model.SharedAccessKeyName) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * @ignore\n * @internal\n */\nexport function isString(s: any): s is string {\n  return typeof s === \"string\";\n}\n\n/**\n * @ignore\n * @internal\n */\nexport function isNumber(n: any): n is number {\n  return typeof n === \"number\";\n}\n"]}